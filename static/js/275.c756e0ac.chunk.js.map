{"version":3,"file":"static/js/275.c756e0ac.chunk.js","mappings":"8PACA,EAA2B,uBAA3B,EAAkE,4B,SCK3D,SAASA,IACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAeA,OAbAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAeN,GAASO,MAAK,SAAAC,GAC3BJ,EAAQI,EAAOL,WAEhB,CAACH,KAEJS,EAAAA,EAAAA,kBAAgB,WACdC,OAAOC,SAAS,CACdC,IAAKC,SAASC,gBAAgBC,aAAe,IAC7CC,SAAU,aAEX,CAACb,KAGF,8BACGA,IACC,iCACE,mBACA,eAAIc,UAAWC,EAAf,SACGf,EAAKgB,KAAI,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,KAAMC,EAAvB,EAAuBA,UAAWC,EAAlC,EAAkCA,GAAlC,OACR,gBAAIN,UAAWC,EAAf,WACE,gBACEM,IACEJ,EAAY,yCAC0BA,GAClCK,EAENC,IAAKL,EACLM,MAAM,SAER,wBAAKN,KACL,uBAAIC,MAXuCC,aAqB3D,S,oLCnDMK,EAAW,gCACXC,EAAU,mCAAhB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,yGAAsCC,EAAtC,+BAA4C,GAA5C,SACyBC,MAAMD,GAD/B,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOT,EAAuB,GAAD,OACxBF,EADwB,sCACcC,IAItC,SAASW,EAAkBC,GAChC,OAAOX,EAAuB,GAAD,OACxBF,EADwB,gCACQC,EADR,kBACyBY,EADzB,+BAKxB,SAASC,EAAe1C,GAC7B,OAAO8B,EAAuB,GAAD,OACxBF,EADwB,iBACP5B,EADO,oBACY6B,IAIpC,SAASvB,EAAeN,GAC7B,OAAO8B,EAAuB,GAAD,OACxBF,EADwB,iBACP5B,EADO,4BACoB6B,IAI5C,SAASc,EAAkB3C,GAChC,OAAO8B,EAAuB,GAAD,OACxBF,EADwB,iBACP5B,EADO,4BACoB6B,M","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","services/movies-api-set.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"CastList\":\"Cast_CastList__2oQ+0\",\"CastList-item\":\"Cast_CastList-item__030HD\"};","import { useState, useEffect, useLayoutEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCast } from 'services/movies-api-set';\nimport noPhoto from '../../assets/no-image-actor.jpg';\nimport styles from './Cast.module.css';\n\nexport function Cast() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    fetchMovieCast(movieId).then(result => {\n      setCast(result.cast);\n    });\n  }, [movieId]);\n\n  useLayoutEffect(() => {\n    window.scrollBy({\n      top: document.documentElement.clientHeight - 160,\n      behavior: 'smooth',\n    });\n  }, [cast]);\n\n  return (\n    <>\n      {cast && (\n        <>\n          <hr />\n          <ul className={styles.CastList}>\n            {cast.map(({ profile_path, name, character, id }) => (\n              <li className={styles['CastList-item']} key={id}>\n                <img\n                  src={\n                    profile_path\n                      ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                      : noPhoto\n                  }\n                  alt={name}\n                  width=\"150\"\n                />\n                <h3>{name}</h3>\n                <p>{character}</p>\n              </li>\n            ))}\n          </ul>\n        </>\n      )}\n    </>\n  );\n}\n\nexport default Cast;\n","const BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'b51df2db085891231dadc3f994e11109';\n\nasync function fetchWithErrorHandling(url = '') {\n  const response = await fetch(url);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchTrendingMovies() {\n  return fetchWithErrorHandling(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n}\n\nexport function fetchMovieByQuery(query) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&page=1&include_adult=true`\n  );\n}\n\nexport function fetchMovieById(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}movie/${movieId}?api_key=${API_KEY}`\n  );\n}\n\nexport function fetchMovieCast(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n}\n\nexport function fetchMovieReviews(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n}\n"],"names":["Cast","movieId","useParams","useState","cast","setCast","useEffect","fetchMovieCast","then","result","useLayoutEffect","window","scrollBy","top","document","documentElement","clientHeight","behavior","className","styles","map","profile_path","name","character","id","src","noPhoto","alt","width","BASE_URL","API_KEY","fetchWithErrorHandling","url","fetch","response","ok","json","Promise","reject","Error","fetchTrendingMovies","fetchMovieByQuery","query","fetchMovieById","fetchMovieReviews"],"sourceRoot":""}