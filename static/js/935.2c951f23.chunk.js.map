{"version":3,"file":"static/js/935.2c951f23.chunk.js","mappings":"qMACA,EAA+B,iCAA/B,EAAoF,sCAApF,EAAoJ,4C,SCI7I,SAASA,EAAT,GAAqC,IAAfC,EAAc,EAAdA,OAAQC,EAAM,EAANA,GAC7BC,GAAWC,EAAAA,EAAAA,MACjB,OACE,eAAIC,UAAWC,EAAf,SACGL,EAAOM,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAIC,EAAd,EAAcA,YAAd,OACV,eAAIL,UAAWC,EAAf,UACE,UAAC,KAAD,CACED,UAAWC,EACXJ,GAAE,UAAKA,GAAL,OAAUO,GACZE,MAAOR,EAHT,WAKE,gBACES,IACEF,EAAW,yCAC2BA,GAClCG,EAENC,IAAKN,EACLO,MAAM,QAER,0BAAOP,QAfsCC,U,mKCTzD,EAA6B,+BAA7B,EAA+E,qCAA/E,EAAwI,sCAAxI,EAAgM,oC,SCQzL,SAASO,IAAc,IAAD,EAC3B,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAsCC,EAAAA,EAAAA,UAAQ,UAC5CF,EAAaG,IAAI,gBAD2B,QACf,IAD/B,eAAOC,EAAP,KAAoBC,EAApB,KAGA,GAA4BH,EAAAA,EAAAA,UAAS,IAArC,eAAOnB,EAAP,KAAeuB,EAAf,KAiCA,OA/BAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAoBR,EAAaG,IAAI,SAEtCK,IAILC,EAAAA,EAAAA,IAAkBD,GAAmBE,MAAK,SAAA3B,GACxCuB,EAAUvB,EAAO4B,cAElB,CAACX,KAsBF,UAACY,EAAA,EAAD,YACE,kBAAMzB,UAAWC,EAAmByB,SAjBxC,SAAsBC,GACpBA,EAAMC,iBAEqB,KAAvBX,EAAYY,SAIhBf,EAAgB,CAAEgB,MAAOb,KACzBK,EAAAA,EAAAA,IAAkBL,GAAaM,MAAK,SAAA3B,GAClCuB,EAAUvB,EAAO4B,YAGnBN,EAAe,MAKb,WACE,kBACElB,UAAWC,EACX8B,KAAK,OACLC,KAAK,cACLC,MAAOhB,EACPiB,SA3BR,SAA2BP,GACzBT,EAAeS,EAAMQ,cAAcF,MAAMG,gBA2BnCC,aAAa,MACbC,YAAY,mBAEd,mBAAQP,KAAK,SAAS/B,UAAWC,EAAjC,UACE,SAAC,MAAD,CAAUD,UAAWC,SAIxBL,IAAU,SAACD,EAAA,EAAD,CAAYC,OAAQA,EAAQC,GAAI,QAKjD,S,oDCpEA,MAA4B,6B,SCCrB,SAAS4B,EAAT,GAAkC,IAAbc,EAAY,EAAZA,SAC1B,OAAO,gBAAKvC,UAAWC,EAAhB,SAAmCsC,M,oLCHtCC,EAAW,gCACXC,EAAU,mCAAhB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,yGAAsCC,EAAtC,+BAA4C,GAA5C,SACyBC,MAAMD,GAD/B,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOT,EAAuB,GAAD,OACxBF,EADwB,sCACcC,IAItC,SAASnB,EAAkBQ,GAChC,OAAOY,EAAuB,GAAD,OACxBF,EADwB,gCACQC,EADR,kBACyBX,EADzB,+BAKxB,SAASsB,EAAeC,GAC7B,OAAOX,EAAuB,GAAD,OACxBF,EADwB,iBACPa,EADO,oBACYZ,IAIpC,SAASa,EAAeD,GAC7B,OAAOX,EAAuB,GAAD,OACxBF,EADwB,iBACPa,EADO,4BACoBZ,IAI5C,SAASc,EAAkBF,GAChC,OAAOX,EAAuB,GAAD,OACxBF,EADwB,iBACPa,EADO,4BACoBZ,M","sources":["webpack://goit-react-hw-05-movies/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","webpack://goit-react-hw-05-movies/./src/components/MoviesPage/MoviesPage.module.css?564c","components/MoviesPage/MoviesPage.jsx","webpack://goit-react-hw-05-movies/./src/components/utils/Container/Container.module.css?3b60","components/utils/Container/Container.jsx","services/movies-api-set.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"TrendingList\":\"MoviesList_TrendingList__DHTPV\",\"TrendingList-item\":\"MoviesList_TrendingList-item__G-pXu\",\"TrendingList-item--link\":\"MoviesList_TrendingList-item--link__gY+Pj\"};","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport noPoster from '../../assets/no-image-poster-small.jpg';\nimport styles from './MoviesList.module.css';\n\nexport function MoviesList({ movies, to }) {\n  const location = useLocation();\n  return (\n    <ul className={styles.TrendingList}>\n      {movies.map(({ title, id, poster_path }) => (\n        <li className={styles['TrendingList-item']} key={id}>\n          <Link\n            className={styles['TrendingList-item--link']}\n            to={`${to}${id}`}\n            state={location}\n          >\n            <img\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                  : noPoster\n              }\n              alt={title}\n              width=\"50\"\n            />\n            <span>{title}</span>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.string.isRequired,\n    })\n  ),\n  to: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"SearchForm\":\"MoviesPage_SearchForm__kpN7l\",\"SearchForm-input\":\"MoviesPage_SearchForm-input__gkM-N\",\"SearchForm-button\":\"MoviesPage_SearchForm-button__OadaN\",\"SearchForm-icon\":\"MoviesPage_SearchForm-icon__H3pxL\"};","import { useState } from 'react';\nimport { fetchMovieByQuery } from 'services/movies-api-set';\nimport { IoSearch } from 'react-icons/io5';\nimport { useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Container } from 'components/utils/Container';\nimport { MoviesList } from 'components/MoviesList';\nimport styles from './MoviesPage.module.css';\n\nexport function MoviesPage() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchQuery, setSearchQuery] = useState(\n    searchParams.get('query') ?? ''\n  );\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const searchParamsQuery = searchParams.get('query');\n\n    if (!searchParamsQuery) {\n      return;\n    }\n\n    fetchMovieByQuery(searchParamsQuery).then(movies => {\n      setMovies(movies.results);\n    });\n  }, [searchParams]);\n\n  function handleSearchQuery(event) {\n    setSearchQuery(event.currentTarget.value.toLowerCase());\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n\n    if (searchQuery.trim() === '') {\n      return;\n    }\n\n    setSearchParams({ query: searchQuery });\n    fetchMovieByQuery(searchQuery).then(movies => {\n      setMovies(movies.results);\n    });\n\n    setSearchQuery('');\n  }\n\n  return (\n    <Container>\n      <form className={styles.SearchForm} onSubmit={handleSubmit}>\n        <input\n          className={styles['SearchForm-input']}\n          type=\"text\"\n          name=\"searchQuery\"\n          value={searchQuery}\n          onChange={handleSearchQuery}\n          autoComplete=\"off\"\n          placeholder=\"Search movies\"\n        />\n        <button type=\"submit\" className={styles['SearchForm-button']}>\n          <IoSearch className={styles['SearchForm-icon']} />\n        </button>\n      </form>\n\n      {movies && <MoviesList movies={movies} to={''} />}\n    </Container>\n  );\n}\n\nexport default MoviesPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"Container\":\"Container_Container__GA3It\"};","import styles from './Container.module.css';\n\nexport function Container({ children }) {\n  return <div className={styles.Container}>{children}</div>;\n}\n","const BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'b51df2db085891231dadc3f994e11109';\n\nasync function fetchWithErrorHandling(url = '') {\n  const response = await fetch(url);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchTrendingMovies() {\n  return fetchWithErrorHandling(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n}\n\nexport function fetchMovieByQuery(query) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&page=1&include_adult=true`\n  );\n}\n\nexport function fetchMovieById(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}movie/${movieId}?api_key=${API_KEY}`\n  );\n}\n\nexport function fetchMovieCast(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n}\n\nexport function fetchMovieReviews(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n}\n"],"names":["MoviesList","movies","to","location","useLocation","className","styles","map","title","id","poster_path","state","src","noPoster","alt","width","MoviesPage","useSearchParams","searchParams","setSearchParams","useState","get","searchQuery","setSearchQuery","setMovies","useEffect","searchParamsQuery","fetchMovieByQuery","then","results","Container","onSubmit","event","preventDefault","trim","query","type","name","value","onChange","currentTarget","toLowerCase","autoComplete","placeholder","children","BASE_URL","API_KEY","fetchWithErrorHandling","url","fetch","response","ok","json","Promise","reject","Error","fetchTrendingMovies","fetchMovieById","movieId","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}