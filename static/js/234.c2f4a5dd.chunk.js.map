{"version":3,"file":"static/js/234.c2f4a5dd.chunk.js","mappings":"wPACA,EAAmC,kCAAnC,EAAgG,0CAAhG,EAAsK,2CAAtK,EAA6N,2B,SCItN,SAASA,IACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAkBN,GAASO,MAAK,SAAAC,GAC9BJ,EAAWI,EAAKC,cAEjB,CAACT,KAGF,8BACGG,EAAQO,OAAS,GAChB,iCACE,mBACA,wBACGP,EAAQQ,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACX,gBAAIC,UAAWC,EAAf,WACE,gBAAID,UAAWC,EAAf,qBACWJ,MAEX,cAAGG,UAAWC,EAAd,SAAoDH,MAJNC,YAUtD,cAAGC,UAAWC,EAAd,gCAMR,S,oLCtCMC,EAAW,gCACXC,EAAU,mCAAhB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,yGAAsCC,EAAtC,+BAA4C,GAA5C,SACyBC,MAAMD,GAD/B,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOT,EAAuB,GAAD,OACxBF,EADwB,sCACcC,IAItC,SAASW,EAAkBC,GAChC,OAAOX,EAAuB,GAAD,OACxBF,EADwB,gCACQC,EADR,kBACyBY,EADzB,+BAKxB,SAASC,EAAe/B,GAC7B,OAAOmB,EAAuB,GAAD,OACxBF,EADwB,iBACPjB,EADO,oBACYkB,IAIpC,SAASc,EAAehC,GAC7B,OAAOmB,EAAuB,GAAD,OACxBF,EADwB,iBACPjB,EADO,4BACoBkB,IAI5C,SAASZ,EAAkBN,GAChC,OAAOmB,EAAuB,GAAD,OACxBF,EADwB,iBACPjB,EADO,4BACoBkB","sources":["webpack://goit-react-hw-05-movies/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","services/movies-api-set.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"ReviewsList-item\":\"Reviews_ReviewsList-item__RD9wM\",\"ReviewsList-item--author\":\"Reviews_ReviewsList-item--author__W7hAE\",\"ReviewsList-item--content\":\"Reviews_ReviewsList-item--content__DX+DZ\",\"NoReviews\":\"Reviews_NoReviews__YBZN9\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'services/movies-api-set';\nimport styles from './Reviews.module.css';\n\nexport function Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    fetchMovieReviews(movieId).then(data => {\n      setReviews(data.results);\n    });\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length > 0 ? (\n        <>\n          <hr />\n          <ul>\n            {reviews.map(({ author, content, id }) => (\n              <li className={styles['ReviewsList-item']} key={id}>\n                <h3 className={styles['ReviewsList-item--author']}>\n                  Author: {author}\n                </h3>\n                <p className={styles['ReviewsList-item--content']}>{content}</p>\n              </li>\n            ))}\n          </ul>\n        </>\n      ) : (\n        <p className={styles.NoReviews}>No reviews found</p>\n      )}\n    </>\n  );\n}\n\nexport default Reviews;","const BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'b51df2db085891231dadc3f994e11109';\n\nasync function fetchWithErrorHandling(url = '') {\n  const response = await fetch(url);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchTrendingMovies() {\n  return fetchWithErrorHandling(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n}\n\nexport function fetchMovieByQuery(query) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&page=1&include_adult=true`\n  );\n}\n\nexport function fetchMovieById(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}movie/${movieId}?api_key=${API_KEY}`\n  );\n}\n\nexport function fetchMovieCast(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n}\n\nexport function fetchMovieReviews(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n}\n"],"names":["Reviews","movieId","useParams","useState","reviews","setReviews","useEffect","fetchMovieReviews","then","data","results","length","map","author","content","id","className","styles","BASE_URL","API_KEY","fetchWithErrorHandling","url","fetch","response","ok","json","Promise","reject","Error","fetchTrendingMovies","fetchMovieByQuery","query","fetchMovieById","fetchMovieCast"],"sourceRoot":""}