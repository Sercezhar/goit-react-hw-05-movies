{"version":3,"file":"static/js/401.0ac4e376.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieDetailsPage/MovieDetailsPage.module.css?377f","webpack://goit-react-hw-05-movies/./src/components/MovieMoreDetails/MovieMoreDetails.module.css?61c7","components/MovieMoreDetails/MovieMoreDetails.jsx","components/MovieDetailsPage/MovieDetailsPage.jsx","services/movies-api-set.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"BackBtn\":\"MovieDetailsPage_BackBtn__YRIDA\",\"MovieContainer\":\"MovieDetailsPage_MovieContainer__dDvDP\",\"MoviePoster\":\"MovieDetailsPage_MoviePoster__NqFFY\",\"MovieDetails-subsection\":\"MovieDetailsPage_MovieDetails-subsection__KtU9I\",\"MoreDetailsList-item\":\"MovieDetailsPage_MoreDetailsList-item__ADdGD\",\"MovieDetails-title\":\"MovieDetailsPage_MovieDetails-title__IUlPx\"};","// extracted by mini-css-extract-plugin\nexport default {\"MoreDetailsTitle\":\"MovieMoreDetails_MoreDetailsTitle__8FZrA\",\"MoreDetailsList\":\"MovieMoreDetails_MoreDetailsList__BLBFC\",\"MoreDetailsList-item\":\"MovieMoreDetails_MoreDetailsList-item__vQwg4\",\"MoreDetailsList-btn\":\"MovieMoreDetails_MoreDetailsList-btn__xAqav\"};","import { Link } from 'react-router-dom';\nimport styles from './MovieMoreDetails.module.css';\n\nexport function MovieMoreDetails() {\n  return (\n    <div>\n      <h3 className={styles.MoreDetailsTitle}>Additional information</h3>\n      <ul className={styles.MoreDetailsList}>\n        <li className={styles['MoreDetailsList-item']}>\n          <Link to=\"cast\">\n            <button className={styles['MoreDetailsList-btn']}>Cast</button>\n          </Link>\n        </li>\n        <li className={styles['MoreDetailsList-item']}>\n          <Link to=\"reviews\">\n            <button className={styles['MoreDetailsList-btn']}>Reviews</button>\n          </Link>\n        </li>\n      </ul>\n    </div>\n  );\n}\n","import { fetchMovieById } from 'services/movies-api-set';\nimport { useEffect, useState } from 'react';\nimport { Outlet, useParams, useLocation, useNavigate } from 'react-router-dom';\nimport noPoster from '../../assets/no-image-poster-large.jpg';\nimport styles from './MovieDetailsPage.module.css';\nimport { MovieMoreDetails } from '../MovieMoreDetails/MovieMoreDetails';\n\nexport function MovieDetailsPage() {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [prevLocation, setPrevLocation] = useState();\n\n  useEffect(() => {\n    fetchMovieById(movieId).then(setMovie);\n  }, [movieId]);\n\n  useEffect(() => {\n    if (!location.state) {\n      return;\n    }\n\n    const { state } = location;\n    setPrevLocation(`${state.pathname}${state.search}`);\n  }, [location]);\n\n  function onGoBack() {\n    navigate(prevLocation ? prevLocation : '/');\n  }\n\n  return (\n    <>\n      {movie && (\n        <>\n          <button className={styles.BackBtn} type=\"button\" onClick={onGoBack}>\n            Back\n          </button>\n          <div className={styles.MovieContainer}>\n            <img\n              className={styles.MoviePoster}\n              src={\n                movie.poster_path\n                  ? `https://image.tmdb.org/t/p/original${movie.poster_path}`\n                  : noPoster\n              }\n              alt={movie.poster_path}\n              width=\"280\"\n            />\n            <ul>\n              <li className={styles['MovieDetails-subsection']}>\n                <h2 className={styles['MovieDetails-title']}>\n                  {movie.original_title} ({movie.release_date.slice(0, 4)})\n                </h2>\n                <p>\n                  User score:{' '}\n                  {movie.vote_average === 0\n                    ? 'N/A'\n                    : `${movie.vote_average * 10}%`}\n                </p>\n              </li>\n              <li className={styles['MovieDetails-subsection']}>\n                <h3 className={styles['MovieDetails-title']}>Overview</h3>\n                <p>{movie.overview}</p>\n              </li>\n              <li className={styles['MovieDetails-subsection']}>\n                <h3 className={styles['MovieDetails-title']}>Genres</h3>\n                <p>\n                  {movie.genres.length > 0\n                    ? movie.genres.map(genre => genre.name).join(', ')\n                    : 'No genres found'}\n                </p>\n              </li>\n            </ul>\n          </div>\n\n          <hr />\n          <MovieMoreDetails />\n          <Outlet />\n        </>\n      )}\n    </>\n  );\n}\n\nexport default MovieDetailsPage;","const BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'b51df2db085891231dadc3f994e11109';\n\nasync function fetchWithErrorHandling(url = '') {\n  const response = await fetch(url);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchTrendingMovies() {\n  return fetchWithErrorHandling(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n}\n\nexport function fetchMovieByQuery(query) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&page=1&include_adult=true`\n  );\n}\n\nexport function fetchMovieById(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}movie/${movieId}?api_key=${API_KEY}`\n  );\n}\n\nexport function fetchMovieCast(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n}\n\nexport function fetchMovieReviews(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n}\n"],"names":["MovieMoreDetails","className","styles","to","MovieDetailsPage","location","useLocation","navigate","useNavigate","movieId","useParams","useState","movie","setMovie","prevLocation","setPrevLocation","useEffect","fetchMovieById","then","state","pathname","search","type","onClick","src","poster_path","noPoster","alt","width","original_title","release_date","slice","vote_average","overview","genres","length","map","genre","name","join","BASE_URL","API_KEY","fetchWithErrorHandling","url","fetch","response","ok","json","Promise","reject","Error","fetchTrendingMovies","fetchMovieByQuery","query","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}